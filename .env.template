ENV_TYPE="DEV"   #* Environment type: DEV - development, PROD - production

# Hosts and URLs
APP_LOCAL_HOST="localhost"   #* Host name on which app is served locally
APP_LOCAL_PORT="8000"   #* Port on which app is served locally
APP_PUBLIC_DOMAIN=<site_public_domain>  #* Domain name of your site (PROD environment only!)
MAIN_PAGE_URL="http://localhost:3001"  #* URL of the main frontend page

OPENAPI_URL="/openapi.json"  #* URL of OpenAPI schema


# Database connection
POSTGRES_USER=<postgres_user>   # Postgres user name
POSTGRES_DB=<postgres_db>   # Postgres database name
POSTGRES_HOST="localhost"   #* Host on which postgres connection is available
POSTGRES_PORT="5432"   #* Port on which postgres connection is available
POSTGRES_ENGINE="asyncpg"  #* Postgres engine type. Only 'asyncpg' is supported now
#POSTGRES_PASSWORD=<postgres_password>   # !!! It is recommended to store password in secret file

REDIS_HOST="localhost"   #* Host on which redis connection is available
REDIS_PORT="6379"   #* Port on which redis connection is available

# Cryprography (!!! It is recommended to store every of those variables in secret files)
#ACCESS_TOKEN_SECRET=<access_token_secret>   # Secret key that is used for signing access tokens
#REFRESH_TOKEN_SECRET=<refresh_token_secret>    # Secret key that is used for signing refresh tokens
#VERIFICATION_TOKEN_SECRET=<verification_token_secret>  # Secret key that is used for signing verification tokens
#RESET_PASSWORD_TOKEN_SECRET=<reset_password_token_secret>  # Secret key that is used for signing password-reset tokens
#KEY_ENCODE_SECRET=<key_encode_secret>   # Secret key that is used for encryption and decription of user's API keys stored in a database

# API keys of dxternal services (!!! should also be stored as secrets)
#SENDGRID_API_KEY=<sendgrid_api_key>  # API key for SendGrid client (email client)
#GOOGLE_OAUTH_CONFIG=<google_oauth_config>  # Json config containing OAuth2 credentials in format {"client_id": "<client_id>", "client_secret": "<client_secret>"}
#GITHUB_OAUTH_CONFIG=<github_oauth_config>   # Json config containing OAuth2 credentials in format {"client_id": "<client_id>", "client_secret": "<client_secret>"}

# Lifetimes configuration
## Token lifetimes
ACCESS_TOKEN_LIFETIME=<access_token_lifetime>   #* Time (in seconds) after which access token expires
REFRESH_TOKEN_LIFETIME=<refresh_token_lifetime>    #* Time (in seconds) after which refresh token expires
VERIFICATION_TOKEN_LIFETIME=<verification_token_lifetime>   #* Time (in seconds) after which verification token expires

## Cookies lifetimes
ACCESS_TOKEN_COOKIE_LIFETIME=<access_token_cookie_lifetime>  #* Time (in seconds) after which cookie with access token unsets
REFRESH_TOKEN_COOKIE_LIFETIME=<refresh_token_cookie_lifetime>  #* Time (in seconds) after which cookie with refresh token unsets

## Account lifetimes
GUEST_ACCOUNT_LIFETIME=<guest_account_lifetime>  #* Time after creating an account (in seconds) after which guest account is deleted
UNVERIFIED_ACCOUNT_LIFETIME=<unverified_account_lifetime>  #* Time after signing up (in seconds) after which unverified account is deleted

# AI related
TITLE_SYSTEM_PROMPT=<title_system_prompt>  #* Prompt that is used for making assistant provide title for chat with each message
TITLE_SYS_MESSAGE_START_TOKEN=<start_token>  #* Token that denotes a start of system information in API data stream
TITLE_SYS_MESSAGE_END_TOKEN=<end_token>  #* Token that denotes an end of system information in API data stream
TITLE_SYS_MESSAGE_MIN_LENGTH=<min_length>  #* Min length of the system information in data stream
TITLE_SYS_MESSAGE_MAX_LENGTH=<min_length>  #* Max length of the system information in date stream

# Debugging
SEND_EMAILS=<send_emails>  #* true - use SendGrid client to send actual emails. false - print tokens in stdout
RESPONSE_LATENCY="0"  #* Latency for each API response (in seconds). Usefull for frontend debugging. 0 - no latency
